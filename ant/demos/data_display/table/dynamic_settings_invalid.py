from render_html import *
from render_antd import Table, Switch, Radio, Form, Space
from render_ant_icons import DownOutlined
expandable = dict(expandedRowRender=record => <p>{record.description}</p>)
pagination = dict(position='bottom')
scroll = dict()
xScroll, yScroll, ...state = this.xScroll, this.yScroll, this....state
footer = Form([Form.Item(Switch(checked=state.bordered, onChange=this.handleToggle('bordered')), label="Bordered"), Form.Item(Switch(checked=state.loading, onChange=this.handleToggle('loading')), label="loading"), Form.Item(Switch(checked=!!state.title, onChange=this.handleTitleChange), label="Title"), Form.Item(Switch(checked=!!state.showHeader, onChange=this.handleHeaderChange), label="Column Header"), Form.Item(Switch(checked=!!state.footer, onChange=this.handleFooterChange), label="Footer"), Form.Item(Switch(checked=!!state.expandable, onChange=this.handleExpandChange), label="Expandable"), Form.Item(Switch(checked=!!state.rowSelection, onChange=this.handleRowSelectionChange), label="Checkbox"), Form.Item(Switch(checked=!!yScroll, onChange=this.handleYScrollChange), label="Fixed Header"), Form.Item(Switch(checked=!!state.hasData, onChange=this.handleDataChange), label="Has Data"), Form.Item(Switch(checked=!!state.ellipsis, onChange=this.handleEllipsisChange), label="Ellipsis"), Form.Item(Radio.Group([Radio.Button("Default", value="default"), Radio.Button("Middle", value="middle"), Radio.Button("Small", value="small")], value=state.size, onChange=this.handleSizeChange), label="Size"), Form.Item(Radio.Group([Radio.Button("Unset", value=undefined), Radio.Button("Scroll", value="scroll"), Radio.Button("Fixed Columns", value="fixed")], value=xScroll, onChange=this.handleXScrollChange), label="Table Scroll"), Form.Item(Radio.Group([Radio.Button("Unset", value=undefined), Radio.Button("Fixed", value="fixed")], value=state.tableLayout, onChange=this.handleTableLayoutChange), label="Table Layout"), Form.Item(Radio.Group([Radio.Button("TopLeft", value="topLeft"), Radio.Button("TopCenter", value="topCenter"), Radio.Button("TopRight", value="topRight"), Radio.Button("None", value="none")], value=this.state.top, onChange="{lambda e:", {=True, this.setState(=True, top:=True, e.target.value=True, );=True, !}"=True), label="Pagination Top"), Form.Item(Radio.Group([Radio.Button("BottomLeft", value="bottomLeft"), Radio.Button("BottomCenter", value="bottomCenter"), Radio.Button("BottomRight", value="bottomRight"), Radio.Button("None", value="none")], value=this.state.bottom, onChange="{lambda e:", {=True, this.setState(=True, bottom:=True, e.target.value=True, );=True, !}"=True), label="Pagination Bottom")], layout="inline", className="components-table-demo-control-bar", style=dict(marginBottom=16))
footer = Table("{...this.state}"=True, pagination=dict(position=[this.state.top), columns=tableColumns, dataSource=state.hasData ? data : null, scroll=scroll)
def app():
    return Demo()