from render_html import *
from render_ant_icons import QuestionCircleOutlined
Option = Select.Option
prefixSelector = Form.Item(Select([Option("+86", value="86"), Option("+87", value="87")], style=dict(width=70)), name="prefix", noStyle=True)
onWebsiteChange = Form([Form.Item(Input(), name="email", label="E-mail", rules="{[           ", {=True, type:=True, 'email',=True, message:=True, 'The=True, input=True, is=True, not=True, valid=True, E-mail!',=True, }",=True, "{=True, required:=True, true,=True, message:=True, 'Please=True, input=True, your=True, E-mail!',=True, }",=True, ]}"=True), Form.Item(Input.Password(), name="password", label="Password", rules="{[           ", {=True, required:=True, true,=True, message:=True, 'Please=True, input=True, your=True, password!',=True, }",=True, ]}"=True, hasFeedback=True), Form.Item(["(             validator(_, value) "{               if (!value || getFieldValue('password') === value) "{                 return Promise.resolve();               }"               return Promise.reject('The two passwords that you entered do not match!');             }",           ),         ]}"       >", Input.Password()], name="confirm", label="Confirm Password", dependencies=['password'], hasFeedback=True, rules="{[           ", {=True, required:=True, true,=True, message:=True, 'Please=True, confirm=True, your=True, password!',=True, }",=True, (=True, getFieldValue=True, )=""), Form.Item(QuestionCircleOutlined(), name="nickname", label="{           <span>             NicknameÂ              <Tooltip title=", What=True, do=True, you=True, want=True, others=True, to=True, call=True, you?"=True)], "{...formItemLayout}"=True, form=form, name="register", onFinish=onFinish, initialValues=dict(residence=['zhejiang', prefix='86'), scrollToFirstError=True)
onWebsiteChange = Input()
onWebsiteChange = Form.Item(Cascader(options=residences), name="residence", label="Habitual Residence", rules="{[           ", {=True, type:=True, 'array',=True, required:=True, true,=True, message:=True, 'Please=True, select=True, your=True, habitual=True, residence!'=True, }",=True, ]}"=True)
onWebsiteChange = Form.Item(Input(addonBefore=prefixSelector, style=dict(width='100%')), name="phone", label="Phone Number", rules="{[", {=True, required:=True, true,=True, message:=True, 'Please=True, input=True, your=True, phone=True, number!'=True, }"]}"=True)
onWebsiteChange = Form.Item(AutoComplete(Input(), options=websiteOptions, onChange=onWebsiteChange, placeholder="website"), name="website", label="Website", rules="{[", {=True, required:=True, true,=True, message:=True, 'Please=True, input=True, website!'=True, }"]}"=True)
onWebsiteChange = Form.Item(Row([Col(Form.Item(Input(), name="captcha", noStyle=True, rules="{[", {=True, required:=True, true,=True, message:=True, 'Please=True, input=True, the=True, captcha=True, you=True, got!'=True, }"]}"=True), span=12), Col(Button("Get captcha"), span=12)], gutter=8), label="Captcha", extra="We must make sure that your are a human.")
onWebsiteChange = Form.Item(["value ? Promise.resolve() : Promise.reject('Should accept agreement'),           }",         ]}"         "{...tailFormItemLayout}"       >", Checkbox(["I have read the", a("agreement", href="")])], name="agreement", valuePropName="checked", rules="{[           ", {=True, validator:=True, (_,=True, value)="")
onWebsiteChange = Form.Item(Button("Register", type="primary", htmlType="submit"), "{...tailFormItemLayout}"=True)
def app():
    return RegistrationForm()