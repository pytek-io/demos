- - Who are we?
  - A startup building a Python enterprise framework called Reflect.
  - Francois du Vignaud and a few of his friends and ex-colleagues have embarked in the Pytek project in November 2021. They strongly believe that they can deliver next generation technical solutions through their technical expertise and their deep understanding of technology use in the enterprise world.

- - What do we mean by Python enterprise framework?
  - A technology allowing to build web applications (aka web apps) all in Python.
  - Reflect provides a fully integrated infrastructure allowing to build web apps very easily. As a result developers can focus almost exclusively on business related issues taking advantage of a battle tested framework.

- - What is a web app?
  - "A web page which allows for user interaction (eg: web mail, social network pages, etc)."
  - More specifically it is a web page which content evolves with the current context, be it user inputs, external events, etc. Reflect provides powerful abstractions making it easy to define advanced dynamic behaviours, as well as external events support (aka asynchronous programming).

- - What are Reflect's advantages over existing solutions?
  - Web apps require complex infrastructure, various programming languages, tools, etc. With Reflect the only thing you need is write high level Python code.
  - The equivalent solutions to Reflect are either NodeJS and MS Blazor which rely on JavaScript and .Net ecosystems respectively. Short of that, one has to setup a technical infrastructure which usually comprises a front end part written in JS and a back-end part written in the target language. Building this is a challenging engineering issue which is usually loosely correlated with the actual business.

- - What are Reflect's drawbacks over existing solutions?
  - In order to respond Reflect web apps need to be connected to the server at all time. Also, even though they do work fine on mobiles they will take a bit of time to load initially. 
  - You are probably better of using a more bespoke architecture if you are building a general public app meant to be used on an app.

- - In which situation can you use Reflect?
  - As of now Reflect is very well suited for building in house systems, and B2B portals, etc
  - Given the architectural choices Reflect makes building such apps extremely easy. Any mildly experience Python can build a web app in a couple of hours. Deploying and maintaining is fully automated, making the overall development process perfectly seamless.

- - Are there any examples of apps build on top of Reflect?
  - You can see a few in the website app demos section. Our website and even this presentation are build with Reflect (we eat our own dog food as they say in the Valley, and we love it!).
  - We are building prototypes for a few startups already, some of them should be made public soon.
- - Which industry would benefit most from Reflect?
  - Finance is the most obvious, but by no mean the only one, industry, services, etc. Any organization which need an efficient solution to build systems in Python.
  - ""
- - What is our goal?
  - Expand our user community to the professional world. Gather users feedback while helping them to get a better understanding of their needs.
  - ""
- - Which users are we targeting?
  - Any startup, small company that has a business need for Reflect.
  - ""
- - How much does Reflect cost?
  - Nothing, Reflect is free to use for the time being. Early adopters will have the right to use their copy indefinitely.
  - ""
- - How do you get started?
  - You can download Reflect and start using it straightaway. Please feel to reach out to us we will be more than happy to guide your first steps!
  - ""
- - Anything else we want you to know?
  - Reflect is in beta, meaning we won't change its interface. We are aiming for the prod release mid year. We are also working hard on improving the tutorial, demos, so stay tuned.
  - ""
